name: Build PDF

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ZF_NAME: Zusammenfassung # The artifact and output name for this build.
      VERSION: latest # TODO: grep from ${{env.ZF_NAME}}.tex \versioninfo command
      
    steps:
      - uses: actions/checkout@v2
        id: latexparser
        with:
          submodules: recursive

      - uses: OST-HS20/latex-parser-action@master
        with:
          latex_file: ${{env.ZF_NAME}}.tex
          command_name: versioninfo
          
      - name: The command value
        run: echo "Value was ${{steps.latexparser.outputs.value}}"
      # # Build latest Latex
      # - name: Compile LaTeX document
      #   uses: xu-cheng/latex-action@v2
      #   with:
      #     root_file: ${{env.ZF_NAME}}.tex
      #     
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: V${{env.VERSION}}
      #     release_name: V${{env.VERSION}}
      #     draft: false 
      #     
      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: ./${{env.ZF_NAME}}.pdf
      #     asset_name: ${{env.ZF_NAME}}.pdf
      #     asset_content_type: application/pdf
      # 